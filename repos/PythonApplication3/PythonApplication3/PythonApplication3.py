import pandas as pd
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt
 
df_features = [0.900000000000000,0.442666666666667,0.879166666666667,1.37304347826087,0.623428571428571,0.410333333333333,4.54312500000000,1.11083333333333,2.45600000000000,1.00050000000000,4.57400000000000,5.49666666666667,0.751000000000000,5.13833333333333,2.02260869565217,2.81125000000000,0.809047619047619,1.94000000000000,1.29400000000000,1.61478260869565,1.01700000000000,5.54750000000000,1.30200000000000,4.72625000000000,5.55266666666667,1.47000000000000,2.31500000000000,1.42350000000000,7.03416666666667,4.98200000000000,2.21460000000000,5.61750000000000,2.96700000000000,3.44600000000000,2.40000000000000,3.01750000000000,6.67900000000000,6.12000000000000,3.49200000000000,7.74500000000000,10.6400000000000,1.85461538461538,4.29200000000000,16.9850000000000,0.143920000000000,2.55333333333333,9.16666666666667,9.66739130434783,4.74000000000000,2.84461538461538,2.20000000000000,10.1533333333333,3.99875000000000,3.83583333333333,7.37800000000000,7.28000000000000,7.97666666666667,1.28600000000000,1.64850000000000,1.16250000000000,13.8280000000000,0.828500000000000,14.4520000000000,2.67750000000000,1.48375000000000,6.90538461538462,1.02452380952381,42.1566666666667,1.34444444444444,2.37875000000000,1.52700000000000,1.64333333333333,5.43500000000000,4.84500000000000,1.66200000000000,0.806538461538462,6.18000000000000,3.22000000000000,9.07500000000000,1.20000000000000,2.94666666666667,13.7570000000000,2.59300000000000,2.52833333333333,1.49333333333333,1.01120000000000,1.33578947368421,1.66384615384615,2.65375000000000,4.51800000000000,0.506000000000000,3.57565217391304,3.87533333333333,2.34700000000000,1.34125000000000,2.15100000000000,1.09633333333333,1.00375000000000,4.30178571428571,1.13000000000000,3.23000000000000,5.03000000000000,1.07500000000000,2.38200000000000,6.89166666666667,3.89000000000000,2.87360000000000,2.48600000000000,2.33333333333333,10.7740000000000,4.80416666666667,0.671666666666667,3,0.572500000000000,1.50916666666667,1.52600000000000,1.04400000000000,1.36500000000000,1.22700000000000,1.26200000000000,3.53000000000000,3.51875000000000,1.62800000000000,1.47021276595745,0.908666666666667,1.84740000000000,1.34291666666667,3.53500000000000,1.00621621621622,1.30300000000000,0.804000000000000,1.85300000000000,0.847083333333333,2.62133333333333,1.57060000000000,2.53900000000000,1.65152173913043,0.864000000000000,3.14000000000000,1.47416666666667,2.05466666666667,0.722096774193548,1.22500000000000,0.738000000000000,2.28545454545455,0.844000000000000,0.608518518518519,1.16422222222222,2.00400000000000,1.47300000000000,1.99750000000000,0.979230769230769,0.976666666666667,1.10184210526316,2.17400000000000,1.30125000000000,2.81200000000000,2.44000000000000,2.18400000000000,1.17590909090909,1.14711111111111,2.55437500000000,2.07575757575758,2.06523809523810,1.48631578947368,3.08400000000000,0.878000000000000,2.02187500000000,1.87538461538462,2.21461538461538,2.18269230769231,1.96383333333333,2.46333333333333,3.49952380952381,4.24000000000000,2.02000000000000,3.32250000000000,1.46892857142857,0.587000000000000,12.6933333333333,8.23666666666667,1.78562500000000,3.38666666666667,3.39200000000000,5.11125000000000,1.29200000000000,1.43166666666667,1.00555555555556,2.18055555555556,1.57600000000000,2.80416666666667,3.22250000000000,4.55090909090909,4.52333333333333,1.35000000000000,0.505454545454546,3.66000000000000,0.440769230769231,0.862500000000000,12.7566666666667,4.43200000000000,2.41142857142857,3.50333333333333,2.84454545454545,3.54333333333333,1.08583333333333,1.29333333333333,3.84272727272727,0.895882352941177,1.14666666666667,2.61000000000000,4.37500000000000,5.02333333333333,1.36818181818182,1.42043478260870,0.528181818181818,2.66000000000000,4.17538461538462,0.713684210526316,0.787619047619048,1.13700000000000,0.787272727272727,3.13000000000000,1.82000000000000,1.90666666666667,1.64944444444444,0.566000000000000,1.72857142857143,6.00625000000000,6.85692307692308,5.90000000000000,2.16952380952381,4.13000000000000,4.58750000000000,11.6966666666667,1.53863636363636,2.41000000000000,1.34500000000000,3.76666666666667,1.61916666666667,0.481000000000000,5.98000000000000,0.879000000000000,2.86666666666667,1.94750000000000,1.78000000000000,1.79666666666667,0.404782608695652,1.33000000000000,0.784000000000000,8.52941176470588,9.03153846153846,2.29075829383886,6.30733333333333,10.0175000000000,2.05236842105263,7.26000000000000,5.30666666666667,8.91600000000000,4.43300000000000,3.30000000000000,4.12300000000000,5.55857142857143,2.77928571428571,6.46166666666667,4.70750000000000,2.65769230769231,4.13625000000000,5.38833333333333,2.69000000000000,1.03533333333333,2.14923076923077,5.09600000000000,1.59466666666667,1.44875000000000,3.80166666666667,2.27600000000000,2.82250000000000,11.2450000000000,1.11350000000000,3.62166666666667,2.58750000000000,3.42833333333333,2.56500000000000,3.93000000000000,2.37250000000000,5.59666666666667,3.24000000000000,1.82625000000000,1.75000000000000,2.70800000000000,1.52875000000000,4.02666666666667,1.19700000000000,3.97666666666667,1.35000000000000,0.785833333333333,1.76000000000000,0.701250000000000,1.69333333333333,7.22444444444444,17.0875000000000,11.5080000000000,2.71812500000000,3.80181818181818,1.35460992907801,6.96600000000000,2.58153846153846,1.95800000000000,2.42454545454545,1.42000000000000,1.69400000000000,1.70785714285714,6.96666666666667,0.935909090909091,9.88500000000000,2.42000000000000,0.626000000000000,4.32750000000000,1.55727272727273,2.49166666666667,0.574615384615385,1.68625000000000,3.18250000000000,4.24000000000000,1.41375000000000,2.21600000000000,1.00283018867925,0.860833333333333,1.89000000000000,2.93333333333333,1.87250000000000,1.72333333333333]
'利用SSE选择k'
SSE = []  # 存放每次结果的误差平方和
for k in range(1,9):
    estimator = KMeans(n_clusters=k)  # 构造聚类器
    estimator.fit(df_features[['R','F','M']])
    SSE.append(estimator.inertia_) # estimator.inertia_获取聚类准则的总和
X = range(1,9)
plt.xlabel('k')
plt.ylabel('SSE')
plt.plot(X,SSE,'o-')
plt.show()