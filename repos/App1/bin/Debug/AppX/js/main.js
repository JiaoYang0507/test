window.__gMsEdge = {}; __gMsEdge.windowIdObject = {}; __gMsEdge.numberOfRequiredFields = 1, function () { "use strict"; __gMsEdge.windowId = "" + Math.round(Math.random() * 1e16); window.setTimeout(function () { __gMsEdge.message && __gMsEdge.message.invokeQueues() }, 0) }(); __gMsEdge.common = {}, function () { "use strict"; __gMsEdge.common.JSONSafeObject = function () { }; __gMsEdge.common.JSONSafeObject.prototype.toJSON = null; __gMsEdge.common.JSONStringify = JSON.stringify; __gMsEdge.common.kNamelessFormIDPrefix = "MSEdge~"; __gMsEdge.common.isElementVisible = function (n) { for (var t = n, i; t && t !== document;) { if (t.nodeType === Node.ELEMENT_NODE && (i = window.getComputedStyle(t), i.display === "none" || i.visibility === "hidden")) return !1; t = t.parentNode } return !0 }; __gMsEdge.common.isFormControlElement = function (n) { var t = n.tagName; return t === "INPUT" || t === "SELECT" || t === "TEXTAREA" }; __gMsEdge.common.getFormControlElements = function (n) { var r, t, i; if (!n) return []; if (r = [], t = n.elements, t != null) for (i = 0; i < t.length; i++)__gMsEdge.common.isFormControlElement(t[i]) && r.push(t[i]); return r }; __gMsEdge.common.autoComplete = function (n) { return n ? __gMsEdge.common.getLowerCaseAttribute(n, "autocomplete") === "off" ? !1 : !__gMsEdge.common.getLowerCaseAttribute(n, "autocomplete") && __gMsEdge.common.getLowerCaseAttribute(n.form, "autocomplete") === "off" ? !1 : !0 : !1 }; __gMsEdge.common.isTextField = function (n) { return n ? n.type === "hidden" ? !1 : n.type === "text" || n.type === "email" || n.type === "tel" || n.type === "url" || n.type === "number" : !1 }; __gMsEdge.common.setInputElementChecked = function (n, t) { var i = t.checked !== n; t.checked = n; i && __gMsEdge.common.createAndDispatchHTMLEvent(t, "change", !0, !1) }; __gMsEdge.common.setInputElementValue = function (n, t, i, r = "") { var u = __gMsEdge.common.sanitizeValueForInputElement(n, t), f = u !== t.value; t.value = u; f && i && (__gMsEdge.common.createAndDispatchHTMLEvent(t, "input", !0, !1, r), __gMsEdge.common.createAndDispatchHTMLEvent(t, "change", !0, !1, r)) }; __gMsEdge.common.sanitizeValueForInputElement = function (n, t) { return n ? __gMsEdge.common.isTextField(t) ? __gMsEdge.common.sanitizeValueForTextFieldInputType(n, t) : n : "" }; __gMsEdge.common.sanitizeValueForTextFieldInputType = function (n, t) { var e = t.type, r, u, i, f; if (e === "email") return __gMsEdge.common.sanitizeValueForEmailInputType(n, t); if (e === "number") return __gMsEdge.common.sanitizeValueForNumberInputType(n); for (r = n.replace(/(\r\n|\n|\r)/gm, ""), u = r.length, i = 0; i < u; ++i)if (f = r[i], f < " " && f != "\t") { u = i; break } return r.substring(0, u) }; __gMsEdge.common.sanitizeValueForEmailInputType = function (n, t) { var u = n.replace(/(\r\n|\n\r)/gm, ""), i, r; if (!t.multiple) return __gMsEdge.common.trim(n); for (i = u.split(","), r = 0; r < i.length; ++r)i[r] = __gMsEdge.common.trim(i[r]); return i.join(",") }; __gMsEdge.common.sanitizeValueForNumberInputType = function (n) { var t = Number(n); return isNaN(t) ? "" : t.toString() }; __gMsEdge.common.trim = function (n) { return n.replace(/^\s+|\s+$/g, "") }; __gMsEdge.common.nameForAutofill = function (n) { if (!n) return ""; var t = n.name; return t && (t = __gMsEdge.common.trim(t), t.length > 0) ? t : (t = n.getAttribute("id"), t) ? __gMsEdge.common.trim(t) : "" }; __gMsEdge.common.getLowerCaseAttribute = function (n, t) { if (!n) return null; var i = n.getAttribute(t); return i ? i.toLowerCase() : null }; __gMsEdge.common.getTextDirection = function (n) { return window.getComputedStyle(n).direction.toLowerCase() }; __gMsEdge.common.absoluteURL = function (n, t) { if (n.location.protocol === "data:") return n.location.href; var i = n.__gMsEdgeURLNormalizer; return i || (i = n.createElement("a"), n.__gMsEdgeURLNormalizer = i), i.href = t, i.href }; __gMsEdge.common.removeQueryAndReferenceFromURL = function (n) { var i = n.indexOf("?"), t; return i != -1 ? n.substring(0, i) : (t = n.indexOf("#"), t != -1) ? n.substring(0, t) : n }; __gMsEdge.common.getFormIdentifier = function (n) { var t, i; if (!n) return ""; if ((t = n.getAttribute("name"), t && t.length != 0) || (t = n.getAttribute("id"), t)) return t; for (i = 0; i != document.forms.length; i++)if (document.forms[i] == n) return __gMsEdge.common.kNamelessFormIDPrefix + i; return "" }; __gMsEdge.common.AddFontDetails = function (n, t) { let i = window.getComputedStyle(n), e = i.fontFamily; e && (t.fieldFontFamily = e); let r = 1; document.documentElement && document.documentElement.msContentZoomFactor && !isNaN(document.documentElement.msContentZoomFactor) && (r = document.documentElement.msContentZoomFactor); t.fieldFontSize = __gMsEdge.common.GetNumberFromPixels(i.fontSize, 13) * r; const u = 0; let o = __gMsEdge.common.GetNumberFromPixels(i["padding-left"], u), s = __gMsEdge.common.GetNumberFromPixels(i["padding-top"], u), h = __gMsEdge.common.GetNumberFromPixels(i["padding-right"], u), c = __gMsEdge.common.GetNumberFromPixels(i["padding-bottom"], u); const f = 2.5; let l = [(o + f) * r, (s + f) * r, (h + f) * r, (c + f) * r]; t.fieldPadding = l }; __gMsEdge.common.GetNumberFromPixels = function (n, t) { var i = t; return n && (n = n.replace("px", ""), n && !isNaN(n) && (n = parseInt(n), n && (i = n))), i }; __gMsEdge.common.getFormElementFromIdentifier = function (n) { var i = document.forms.namedItem(n), t; return i ? i.nodeType !== Node.ELEMENT_NODE ? null : i : n.indexOf(__gMsEdge.common.kNamelessFormIDPrefix) == 0 && (t = 0 | n.substring(__gMsEdge.common.kNamelessFormIDPrefix.length), __gMsEdge.common.kNamelessFormIDPrefix + t == n && t < document.forms.length) ? document.forms[t] : null }; __gMsEdge.common.createAndDispatchHTMLEvent = function (n, t, i, r, u = "") { var f = new CustomEvent(t, { detail: u, bubbles: i, cancelable: r }); n.dispatchEvent(f) }; __gMsEdge.common.getFavicons = function () { var r = [], e = !1, i, o, n, t, f, u; for (r.toJSON = null, i = document.getElementsByTagName("link"), o = i.length, n = 0; n < o; ++n)i[n].rel && (t = i[n].rel.toLowerCase(), (t == "shortcut icon" || t == "icon" || t == "apple-touch-icon" || t == "apple-touch-icon-precomposed") && (u = { rel: i[n].rel.toLowerCase(), href: i[n].href }, r.push(u), (t == "icon" || t == "shortcut icon") && (e = !0))); return e || (f = document.location, (f.protocol == "http:" || f.protocol == "https:") && (u = { rel: "icon", href: f.origin + "/favicon.ico" }, r.push(u))), r }; var t = function (n) { return n.hasAttribute("classid") || n.hasAttribute("type") && n.type.indexOf("image/") != 0 }, n = function (n) { return n.textContent.trim().length > 0 || n.getElementsByTagName("img").length > 0 }, i = function () { for (var r, f, s, e, u = [], o = document.getElementsByTagName("object"), h = o.length, i = 0; i < h; i++)r = o[i], t(r) && !n(r) && u.push(r); for (f = document.getElementsByTagName("applet"), s = f.length, i = 0; i < s; i++)e = f[i], n(e) || u.push(e); return u }; __gMsEdge.common.updatePluginPlaceholders = function () { var n = i(); return n.length > 0 ? (__gMsEdge.placeholderTargetPlugins = n, !0) : !1 } }(); __gMsEdge.message = {}, function () { "use strict"; function i(n) { if (__gMsEdge.windowIdObject && typeof __gMsEdge.windowId == "string") { var t = Object.prototype.toJSON; t && (Object.prototype.toJSON = null); n.queue.forEach(function (n) { var i = __gMsEdge.common.JSONStringify({ crwCommand: n, crwWindowId: __gMsEdge.windowId }), t = { crwCommand: __gMsEdge.common.JSONStringify(n), crwWindowId: __gMsEdge.windowId }; browser.webruntime.postMessageToHost([__gMsEdge.token, JSON.stringify(t)]) }); n.reset(); t && (Object.prototype.toJSON = t) } } var t = { scheme: "crwebinvokeimmediate", reset: function () { t.queue = []; t.queue.toJSON = null } }, n; t.reset(); n = { scheme: "crwebinvoke", reset: function () { n.queue = []; n.queue.toJSON = null } }; n.reset(); __gMsEdge.message.invokeOnHostImmediate = function (n) { document && document.body && (t.queue.push(n), i(t)) }; __gMsEdge.message.logAutoFormFillTelemetry = function (t) { n.queue.push(t); i(n) }; __gMsEdge.message.invokeOnHost = function (t) { window.__gMsEdge_Verifying || (n.queue.push(t), i(n)) }; __gMsEdge.message.getMessageQueue = function () { var t = __gMsEdge.common.JSONStringify(n.queue); return n.reset(), t }; __gMsEdge.message.invokeQueues = function () { t.queue.length > 0 && i(t); n.queue.length > 0 && i(n) } }(), function () { "use strict"; function y(n) { for (let t = 0; t < i.length; ++t)if (n === i[t]) return !0; return !1 } function e(n, i) { var r, e, o, f; n && (r = new __gMsEdge.common.JSONSafeObject, e = __gMsEdge.autofill.EXTRACT_MASK_VALUE | __gMsEdge.autofill.EXTRACT_MASK_OPTIONS, __gMsEdge.autofill.webFormElementToFormData(window, n, null, e, r, null) || (r = new __gMsEdge.common.JSONSafeObject), s(n, r) && (o = n.target && u(window, n.target), f = n.getAttribute("action"), f || (f = document.location.href), t({ command: "document.submit", formName: __gMsEdge.common.getFormIdentifier(n), href: __gMsEdge.getFullyQualifiedURL(f), formData: r, targetsFrame: o, saveOnlyPaymentData: i }))) } function p(n) { let t = n.search(/(pay|save|done|card|payment|start|review your order|place order)/); if (t !== -1) { let t = n.search(/(cancel|discard|clear)/); return t === -1 } return !1 } function w(n, t) { return !n || !t || n.top <= t.top } function o(n, t, i) { return p(n) && w(i, t) } function s(n, t) { var i = __gMsEdge.autofill.extractAutofillableElementsInForm(n), r = __gMsEdge.autofill.scanFormControlElements_(i); return __gMsEdge.autofill.isFormInteresting_(t, r, __gMsEdge.numberOfRequiredFields) } function b(t) { return n == !0 && t === 27 ? (__gMsEdge.message.logAutoFormFillTelemetry({ command: "telemetry", telemetryEventName: "FormFill_OptionNotSelected" }), !0) : t === 40 || t === 38 || n == !0 && t === 9 || t === 13 } function k() { var i = function (i) { var r = i.srcElement, h = r.name || "", c = r.value || "", u = new __gMsEdge.common.JSONSafeObject, o, e; r.form !== null && r.form !== undefined && (i.type != "keydown" || b(i.keyCode)) && i.detail !== "AutoFill_FillEvent" && (i.detail !== "AutoFill_ClearEvent" || i.type !== "input") && (o = __gMsEdge.autofill.EXTRACT_MASK_VALUE | __gMsEdge.autofill.EXTRACT_MASK_OPTIONS, __gMsEdge.autofill.webFormElementToFormData(window, r.form, null, o, u, null) || (u = new __gMsEdge.common.JSONSafeObject), e = { command: "form.activity", formName: __gMsEdge.common.getFormIdentifier(i.srcElement.form), fieldName: h, type: i.type, formData: u, value: c, dropDownVisibility: n }, i.keyCode && (e.keyCode = i.keyCode, i.keyCode == 13 && f == !1 && (i.preventDefault(), i.stopPropagation())), s(i.srcElement.form, u) && t(e)) }; document.addEventListener("change", i, !0); document.addEventListener("input", i, !1); document.addEventListener("keydown", i, !1); document.addEventListener("click", i, !1) } function t(n) { __gMsEdge.message.invokeOnHost(n) } function d(n) { __gMsEdge.message.invokeOnHostImmediate(n) } var r; __gMsEdge.core = {}; var f = !0, n = !1, i = []; __gMsEdge.hasPasswordField = function () { return r(window) }; __gMsEdge.stringify = function (n) { var t, i; return n === null ? "null" : typeof n.toJSON == "function" ? (t = n.toJSON, n.toJSON = null, i = __gMsEdge.common.JSONStringify(n), n.toJSON = t, i) : __gMsEdge.common.JSONStringify(n) }; __gMsEdge.core.setDropDownVisibility = function (t) { n = t }; __gMsEdge.core.setPropogateEnter = function (n) { f = n }; __gMsEdge.core.isElementHidden = function (n) { return !n.offsetWidth && !n.offsetHeight && !n.getClientRects().length || !__gMsEdge.autofill.isVisibleNode(n) }; __gMsEdge.core.addSubmitListenerToPaymentForm = function (n) { let t = n.cardNumberFieldDetails; if (t) { let n = document.getElementById(t); if (!n) { let i = document.getElementsByName(t); i.length == 1 && (n = i[0]) } if (n) { let t = n.form; if (t) { let c = n.getBoundingClientRect(), r = { NONE: 0, INPUT_ELEMENT_BUTTON: 1, BUTTON_ELEMENT: 2 }, u = r.NONE, f = undefined, l = t.getElementsByTagName("input"), a = l.length, s = !1; for (let n = 0; n < a; n++) { let t = l[n]; if (u === r.NONE && t.type === "button") { let n = t.value.toLowerCase(); o(n, t.getBoundingClientRect(), c) && !__gMsEdge.core.isElementHidden(t) && (u = r.INPUT_ELEMENT_BUTTON, f = t) } else if (t.type === "submit") { u = r.NONE; f = undefined; s = !0; break } } if (!s) { let n = t.getElementsByTagName("button"), i = n.length; for (let t = 0; t < i; t++) { let i = n[t]; if (u === r.NONE && i.type !== "submit") { let n = i.innerText.toLowerCase(); o(n, i.getBoundingClientRect(), c) && !__gMsEdge.core.isElementHidden(i) && (u = r.BUTTON_ELEMENT, f = i) } else if (i.type === "submit") { u = r.NONE; f = undefined; s = !0; break } } } let h = "unknown"; u != r.NONE && f ? (f.addEventListener("click", function () { e(t, !0) }), h = "ListenerAttached") : h = s ? "SubmitButtonFound" : "NoButtonFound"; __gMsEdge.message.logAutoFormFillTelemetry({ command: "telemetry", telemetryEventName: "FormFill_Payment_AddSubmitListener_Completed", status: h }); i.push(t) } } } }; r = function (n) { var u = n.document, i, t; if (!u) return !1; if (u.querySelector("input[type=password]")) return !0; for (i = n.frames, t = 0; t < i.length; t++)if (r(i[t])) return !0; return !1 }; __gMsEdge.dispatchPopstateEvent = function (n) { var t = window.document.createEvent("HTMLEvents"); t.initEvent("popstate", !0, !1); n && (t.state = JSON.parse(n)); window.setTimeout(function () { window.dispatchEvent(t) }, 0) }; __gMsEdge.getFullyQualifiedURL = function (n) { var t = document.createElement("a"); return t.href = n, t.href }; var u = function (n, t) { var r, i, f; if (n.name === t) return !0; for (r = n.frames, i = 0; i < r.length; ++i)if (f = r[i], f && u(f, t)) return !0; return !1 }, h = function (n) { return (n instanceof HTMLAnchorElement) ? n.href.indexOf("javascript:") == 0 ? !0 : n.target === null || n.target === "" || n.target === "_self" || n.target === "_parent" || n.target === "_top" ? !0 : n.target === "_blank" ? !1 : u(window, n.target) : !1 }, c = function (n) { for (var t = n; t;) { if (t instanceof HTMLAnchorElement) break; t = t.parentNode } return t }, l = function (n, t) { (typeof t == "undefined" || t == "_blank" || t == "") && (t = "" + Date.now() + "-" + Math.random()); typeof n == "undefined" && (n = "about:blank"); d({ command: "externalRequest", href: n, target: t, referrerPolicy: getReferrerPolicy_() }) }, a = function () { t({ command: "resetExternalRequest" }) }, v = function (n) { n.defaultPrevented && a(); n.currentTarget.removeEventListener("click", v, !1) }, g = function (n) { return window.getComputedStyle(n, null).webkitTouchCallout }; __gMsEdge.core.documentInject = function () { return __gMsEdge.message && __gMsEdge.message.invokeQueues(), document.addEventListener("click", function (n) { var t = c(n.target), i; if (t && !h(t)) for (l(t.href, t.target), i = 0; i < 5; ++i)if (t && t != document) t.addEventListener("click", v, !1), t = t.parentNode; else break }, !0), document.addEventListener("click", function (n) { var t = c(n.target); t && (h(t) || (n.defaultPrevented ? a() : l(t.href, t.target))) }, !1), document.addEventListener("activate", function () { n == !0 && __gMsEdge.message.logAutoFormFillTelemetry({ command: "telemetry", telemetryEventName: "FormFill_OptionNotSelected" }); t({ command: "document.activity", type: "activate" }) }, !1), window.addEventListener("unload", function () { t({ command: "document.activity", type: "unload" }) }, !0), window.addEventListener("scroll", function () { n == !0 && t({ command: "document.activity", type: "scroll" }) }), document.addEventListener("submit", function (n) { var t = n.target; (!n.defaultPrevented || y(t)) && e(t, n.defaultPrevented) }, !1), k(), !0 }; __gMsEdge.core.documentInject() }(), function () { "use strict"; function u(n) { for (var t = n.parentNode; t;) { if (t.nodeType === Node.ELEMENT_NODE && (__gMsEdge.autofill.hasTagName(t, "form") || __gMsEdge.autofill.hasTagName(t, "fieldset"))) return !0; t = t.parentNode } return !1 } function f(n) { if (n && n.type !== "hidden") { if (n.type === "password" || n.form_control_type === "password") return !0 } else return !1; return !1 } function n(n) { if (n != null) { var t = new RegExp("[a-zA-Z0-9-_:. ]*(login|signin)[a-zA-Z0-9-_:. ]*", "i"); if (t.test(n.replace(/\s/g, ""))) return !0 } return !1 } function e(n, t) { for (var r = [], i = 0; i < n.length; ++i)__gMsEdge.common.isFormControlElement(n[i]) && (n[i].form || r.push(n[i])), __gMsEdge.autofill.hasTagName(n[i], "fieldset") && !u(n[i]) && t.push(n[i]); return __gMsEdge.autofill.extractAutofillableElementsFromSet(r) } function o(n, t, i, r, u, f) { for (var o, s, e = 0; e < n.length; ++e)if ((r[e] = !1, u[e] = null, o = n[e], __gMsEdge.autofill.isAutofillableElement(o)) && (__gMsEdge.autofill.isAutofillableInputElement(o) && !f.fieldFontFamily && __gMsEdge.common.AddFontDetails(o, f), s = new __gMsEdge.common.JSONSafeObject, __gMsEdge.autofill.webFormControlElementToFormField(o, t, s), i.push(s), u[e] = s, r[e] = !0, i.length > __gMsEdge.autofill.MAX_PARSEABLE_FIELDS)) return !1; return i.length > 0 } function t(n, t, i, r) { for (var c, s, f, l, e = 0; e < n.length; ++e) { var h = n[e], o = h.control, u = null; if (o) { if (o.form != t || o.type === "hidden") continue; else for (f = 0; f < r.length; ++f)if (i[f] === o) { u = r[f]; break } } else { if (c = h.htmlFor, !c) continue; for (f = 0; f < r.length; ++f)if (s = r[f], s && s.name === c) if (u !== null) { u = null; break } else u = s } u && ("label" in u || (u.label = ""), l = __gMsEdge.autofill.findChildText(h), u.label.length > 0 && l.length > 0 && (u.label += " "), u.label += l) } } function i(n, i, r, u, f, e, s) { var y = [], l = [], w = [], v, h, a, p, c; if (!o(u, f, l, w, y, e)) return !1; if (n) v = n.getElementsByTagName("label"), t(v, n, u, y); else for (h = 0; h < r.length; ++h)v = r[h].getElementsByTagName("label"), t(v, n, u, y); for (h = 0, a = 0; h < u.length && a < l.length; ++h)w[h] && (p = u[h], c = l[a], c.label || (c.label = __gMsEdge.autofill.inferLabelForElement(p)), c.label.length > __gMsEdge.autofill.MAX_DATA_LENGTH && (c.label = c.label.substr(0, __gMsEdge.autofill.MAX_DATA_LENGTH)), p === i && (s = l[a]), ++a); return e.fields = l, e.fields.toJSON = null, !0 } function s(n, t) { __gMsEdge.message.logAutoFormFillTelemetry({ command: "telemetry", telemetryEventName: "FormFill_FieldEdited", fieldName: n, fieldType: t }) } function r(n, t, i) { var o, c, u, f, g, nt, a, l; if (n && (o = n.document, o)) { var v = o.forms, y = __gMsEdge.autofill.EXTRACT_MASK_VALUE | __gMsEdge.autofill.EXTRACT_MASK_OPTIONS, s = 0; for (c = 0; c < v.length; ++c) { var p = v[c], tt = __gMsEdge.autofill.extractAutofillableElementsInForm(p), w = __gMsEdge.autofill.scanFormControlElements_(tt); if (w !== 0 && (u = new __gMsEdge.common.JSONSafeObject, __gMsEdge.autofill.webFormElementToFormData(n, p, null, y, u, null))) { if (s += u.fields.length, s > __gMsEdge.autofill.MAX_PARSEABLE_FIELDS) break; __gMsEdge.autofill.isFormInteresting_(u, w, t) && i.push(u) } } var b = [], k = e(o.all, b), d = __gMsEdge.autofill.scanFormControlElements_(k); for (d > 0 && (f = new __gMsEdge.common.JSONSafeObject, g = h(n, b, k, y, f), g && (s += f.fields.length, s <= __gMsEdge.autofill.MAX_PARSEABLE_FIELDS && (nt = __gMsEdge.autofill.isFormInteresting_(f, d, t), nt && i.push(f)))), a = n.frames, l = 0; l < a.length; l++)r(a[l], t, i) } } function h(n, t, r, u, f) { return n ? (f.name = "", f.origin = __gMsEdge.common.removeQueryAndReferenceFromURL(n.location.href), f.action = "", f.is_form_tag = !1, i(null, null, t, r, u, f, null)) : !1 } __gMsEdge.autofill = {}; __gMsEdge.token = Date.now().toString(); __gMsEdge.autofill.MAX_DATA_LENGTH = 1024; __gMsEdge.autofill.MAX_PARSEABLE_FIELDS = 100; __gMsEdge.autofill.EXTRACT_MASK_NONE = 0; __gMsEdge.autofill.EXTRACT_MASK_VALUE = 1; __gMsEdge.autofill.EXTRACT_MASK_OPTION_TEXT = 2; __gMsEdge.autofill.EXTRACT_MASK_OPTIONS = 4; __gMsEdge.autofill.ROLE_ATTRIBUTE_PRESENTATION = 0; __gMsEdge.autofill.lastAutoFilledElement = null; __gMsEdge.autofill.lastActiveElement = null; __gMsEdge.autofill.styleInjected = !1; __gMsEdge.autofill.styleInjectedForGenericText = !1; __gMsEdge.autofill.filledFieldStyle = "background-color:#E5F1FB !important;background-image:none !important;color:#000000 !important;"; __gMsEdge.autofill.isFormInteresting_ = function (t, i, r) { var o, e, u; if (!t || !t.fields || t.fields.length === 0 || (o = t.name, n(t.name) || n(t.id))) return !1; for (e = !1, u = 0; u < t.fields.length; ++u)if (f(t.fields[u])) { e = !0; break } if (e && i === 2) return !1; for (u = 0; u < t.fields.length; ++u)if (t.fields[u].autocomplete_attribute != null && t.fields[u].autocomplete_attribute.length > 0) return !0; return i >= r }; __gMsEdge.autofill.scanFormControlElements_ = function (n) { for (var r, i = 0, t = 0; t < n.length; ++t)r = n[t], __gMsEdge.autofill.isCheckableElement(r) || ++i; return i }; __gMsEdge.autofill.isVisibleNode = function (n) { if (!n) return !1; if (n.nodeType === Node.ELEMENT_NODE) { var t = window.getComputedStyle(n); if (t.visibility == "hidden" || t.display == "none") return !1 } return !n.parentNode || __gMsEdge.autofill.isVisibleNode(n.parentNode) }; __gMsEdge.autofill.extractForms = function (n) { var t = new __gMsEdge.common.JSONSafeObject; return t.forms = __gMsEdge.autofill.extractNewForms(n), __gMsEdge.stringify(t) }; __gMsEdge.autofill.storeActiveElement = function () { __gMsEdge.autofill.lastActiveElement = document.activeElement }; __gMsEdge.autofill.clearActiveElement = function () { __gMsEdge.autofill.lastActiveElement = null }; __gMsEdge.autofill.fillActiveFormField = function (n) { var t = document.activeElement; (__gMsEdge.autofill.lastActiveElement && (t = __gMsEdge.autofill.lastActiveElement, t.focus(), __gMsEdge.autofill.lastActiveElement = null), n.name === __gMsEdge.common.nameForAutofill(t)) && (__gMsEdge.autofill.lastAutoFilledElement = t, __gMsEdge.autofill.fillFormField(n, t)) }; __gMsEdge.autofill.fillForm = function (n, t, i) { var o, e, r, h, u, c; __gMsEdge.autofill.styleInjected || (o = document.createElement("style"), o.textContent = ".edge-autofilled {" + __gMsEdge.autofill.filledFieldStyle + "}", document.head.appendChild(o), __gMsEdge.autofill.styleInjected = !0); var f = function (n) { n.detail !== "AutoFill_FillEvent" && (n.target.classList.remove("edge-autofilled"), s(n.target.name, n.target.type), __gMsEdge.autofill.isSelectElement(n.target) ? n.target.removeEventListener("click", f) : n.target.removeEventListener("input", f)) }, l = __gMsEdge.common.getFormElementFromIdentifier(n.formName), a = __gMsEdge.common.getFormControlElements(l); for (e = 0; e < a.length; ++e)(r = a[e], __gMsEdge.autofill.isAutofillableElement(r)) && ((h = __gMsEdge.common.nameForAutofill(r), !i && r.value && r.value.length > 0 && !__gMsEdge.autofill.isSelectElement(r) && h !== t) || (u = n.fields[h], u) && (__gMsEdge.autofill.isTextInput(r) || __gMsEdge.autofill.isTextAreaElement(r) ? __gMsEdge.common.setInputElementValue(u, r, !0, "AutoFill_FillEvent") : __gMsEdge.autofill.isSelectElement(r) && r.value !== u && (r.value = u, __gMsEdge.common.createAndDispatchHTMLEvent(r, "change", !0, !1)), r.classList.add("edge-autofilled"), __gMsEdge.autofill.isSelectElement(r) ? r.addEventListener("click", f) : r.addEventListener("input", f))); c = function (n) { for (var i = __gMsEdge.common.getFormControlElements(n.target), t = 0; t < i.length; ++t)i[t].classList.remove("edge-autofilled"); n.target.removeEventListener("reset", c) }; l.addEventListener("reset", c) }; __gMsEdge.autofill.autoSuggestFieldFill = function (n, t, i) { if (!__gMsEdge.autofill.styleInjectedForGenericText) { let n = document.createElement("style"); n.textContent = ".edge-autoSuggestFieldFilled {" + __gMsEdge.autofill.filledFieldStyle + "}"; document.head.appendChild(n); __gMsEdge.autofill.styleInjectedForGenericText = !0 } let f = function (n) { n.detail !== "AutoFill_FillEvent" && (n.target.classList.remove("edge-autoSuggestFieldFilled"), n.target.removeEventListener("input", f)) }, e = __gMsEdge.common.getFormElementFromIdentifier(n), u = __gMsEdge.common.getFormControlElements(e), r; for (let n = 0; n < u.length; ++n)if (u[n].name == t) { r = u[n]; break } r && (r.classList.add("edge-autoSuggestFieldFilled"), r.addEventListener("input", f)); __gMsEdge.common.setInputElementValue(i, r, !0, "AutoFill_FillEvent"); let o = function (n) { let t = __gMsEdge.common.getFormControlElements(n.target); for (let n = 0; n < t.length; ++n)t[n].classList.remove("edge-autoSuggestFieldFilled"); n.target.removeEventListener("reset", o) }; e.addEventListener("reset", o) }; __gMsEdge.autofill.clearAutofilledFields = function (n) { for (var t, u = __gMsEdge.common.getFormElementFromIdentifier(n), r = __gMsEdge.common.getFormControlElements(u), i = 0; i < r.length; ++i)(t = r[i], t.classList.contains("edge-autofilled") && !t.disabled) && (__gMsEdge.autofill.isTextInput(t) || __gMsEdge.autofill.isTextAreaElement(t) ? __gMsEdge.common.setInputElementValue("", t, !0, "AutoFill_ClearEvent") : __gMsEdge.autofill.isCheckableElement(t), t.classList.remove("edge-autofilled")) }; __gMsEdge.autofill.extractNewForms = function (n) { var t = []; return function () { t.toJSON = null }(), r(window, n, t), t }; __gMsEdge.autofill.webFormElementToFormData = function (n, t, r, u, f, e) { var o, s; return n ? (f.name = __gMsEdge.common.getFormIdentifier(t), o = t.getAttribute("method"), o && (f.method = o), f.origin = __gMsEdge.common.removeQueryAndReferenceFromURL(n.location.href), f.action = __gMsEdge.common.absoluteURL(n.document, t.getAttribute("action")), f.textDirection = __gMsEdge.common.getTextDirection(t), s = __gMsEdge.common.getFormControlElements(t), i(t, r, [], s, u, f, e)) : !1 }; __gMsEdge.autofill.hasTagName = function (n, t) { return n.nodeType === Node.ELEMENT_NODE && n.tagName === t.toUpperCase() }; __gMsEdge.autofill.isAutofillableElement = function (n) { return __gMsEdge.autofill.isAutofillableInputElement(n) || __gMsEdge.autofill.isSelectElement(n) || __gMsEdge.autofill.isTextAreaElement(n) }; __gMsEdge.autofill.trimWhitespaceLeading = function (n) { return n.replace(/^\s+/gm, "") }; __gMsEdge.autofill.trimWhitespaceTrailing = function (n) { return n.replace(/\s+$/gm, "") }; __gMsEdge.autofill.combineAndCollapseWhitespace = function (n, t, i) { var r = __gMsEdge.autofill.trimWhitespaceTrailing(n), f = r != n, u = __gMsEdge.autofill.trimWhitespaceLeading(t), e = u != t; return f || e || i ? r + " " + u : r + u }; __gMsEdge.autofill.findChildTextInner = function (n, t, i) { var e, f, r, o, u, s; if (t <= 0 || !n) return ""; if (n.nodeType === Node.COMMENT_NODE) return __gMsEdge.autofill.findChildTextInner(n.nextSibling, t - 1, i); if (n.nodeType !== Node.ELEMENT_NODE && n.nodeType !== Node.TEXT_NODE || n.nodeType === Node.ELEMENT_NODE && (n.tagName === "OPTION" || n.tagName === "SCRIPT" || n.tagName === "NOSCRIPT" || __gMsEdge.common.isFormControlElement(n) && (e = n, __gMsEdge.autofill.isAutofillableElement(e)))) return ""; if (n.tagName === "DIV") for (f = 0; f < i.length; ++f)if (n === i[f]) return ""; return (r = __gMsEdge.autofill.nodeValue(n), n.nodeType === Node.TEXT_NODE && !r) ? __gMsEdge.autofill.findChildTextInner(n.nextSibling, t, i) : (o = __gMsEdge.autofill.findChildTextInner(n.firstChild, t - 1, i), u = n.nodeType === Node.TEXT_NODE && !r, u = !1, r = __gMsEdge.autofill.combineAndCollapseWhitespace(r, o, u), s = __gMsEdge.autofill.findChildTextInner(n.nextSibling, t - 1, i), u = n.nodeType === Node.TEXT_NODE && !r, u = !1, __gMsEdge.autofill.combineAndCollapseWhitespace(r, s, u)) }; __gMsEdge.autofill.findChildTextWithIgnoreList = function (n, t) { if (n.nodeType === Node.TEXT_NODE) return __gMsEdge.autofill.nodeValue(n); var i = n.firstChild, r = __gMsEdge.autofill.findChildTextInner(i, 10, t); return r.trim() }; __gMsEdge.autofill.findChildText = function (n) { return __gMsEdge.autofill.findChildTextWithIgnoreList(n, []) }; __gMsEdge.autofill.inferLabelFromSibling = function (n, t) { var u = "", i = n, r, f, e, o; if (!i) return ""; for (; ;) { if (i = t ? i.nextSibling : i.previousSibling, !i) break; if (r = i.nodeType, r !== Node.COMMENT_NODE) { if (r != Node.TEXT_NODE && r != Node.ELEMENT_NODE) break; if (r === Node.TEXT_NODE || __gMsEdge.autofill.hasTagName(i, "b") || __gMsEdge.autofill.hasTagName(i, "strong") || __gMsEdge.autofill.hasTagName(i, "span") || __gMsEdge.autofill.hasTagName(i, "font")) { f = __gMsEdge.autofill.findChildText(i); e = r === Node.TEXT_NODE && f.length === 0; u = __gMsEdge.autofill.combineAndCollapseWhitespace(f, u, e); continue } if (o = u.trim(), o.length > 0) break; if (!__gMsEdge.autofill.hasTagName(i, "img") && !__gMsEdge.autofill.hasTagName(i, "br")) { (__gMsEdge.autofill.hasTagName(i, "p") || __gMsEdge.autofill.hasTagName(i, "label")) && (u = __gMsEdge.autofill.findChildText(i)); break } } } return u.trim() }; __gMsEdge.autofill.inferLabelFromPrevious = function (n) { return __gMsEdge.autofill.inferLabelFromSibling(n, !1) }; __gMsEdge.autofill.inferLabelFromNext = function (n) { return __gMsEdge.autofill.inferLabelFromSibling(n, !0) }; __gMsEdge.autofill.inferLabelFromPlaceholder = function (n) { return !n || !n.placeholder ? "" : n.placeholder }; __gMsEdge.autofill.inferLabelFromListItem = function (n) { if (!n) return ""; for (var t = n.parentNode; t && t.nodeType === Node.ELEMENT_NODE && !__gMsEdge.autofill.hasTagName(t, "li");)t = t.parentNode; return t && __gMsEdge.autofill.hasTagName(t, "li") ? __gMsEdge.autofill.findChildText(t) : "" }; __gMsEdge.autofill.inferLabelFromTableColumn = function (n) { var t, r, i; if (!n) return ""; for (t = n.parentNode; t && t.nodeType === Node.ELEMENT_NODE && !__gMsEdge.autofill.hasTagName(t, "td");)t = t.parentNode; if (!t) return ""; for (r = "", i = t.previousSibling; r.length === 0 && i;)(__gMsEdge.autofill.hasTagName(i, "td") || __gMsEdge.autofill.hasTagName(i, "th")) && (r = __gMsEdge.autofill.findChildText(i)), i = i.previousSibling; return r }; __gMsEdge.autofill.inferLabelFromTableRow = function (n) { var i, r, f, a, y, e, o; if (!n) return ""; for (i = n.parentNode; i;) { if (i.nodeType === Node.ELEMENT_NODE && __gMsEdge.autofill.hasTagName(i, "td")) break; i = i.parentNode } if (!i) return ""; for (var s = i.colSpan, h = 0, v = s - 1, t = i.previousSibling; t;)t.nodeType === Node.ELEMENT_NODE && __gMsEdge.autofill.hasTagName(t, "td") && (h += t.colSpan), t = t.previousSibling; for (t = i.nextSibling; t;)t.nodeType === Node.ELEMENT_NODE && __gMsEdge.autofill.hasTagName(t, "td") && (s += t.colSpan), t = t.nextSibling; for (s += h, v += h, r = n.parentNode; r && r.nodeType === Node.ELEMENT_NODE && !__gMsEdge.autofill.hasTagName(r, "tr");)r = r.parentNode; if (!r) return ""; for (f = r.previousSibling; f;) { if (f.nodeType === Node.ELEMENT_NODE && __gMsEdge.autofill.hasTagName(r, "tr")) break; f = f.previousSibling } if (f) { for (var l = null, c = 0, u = f.firstChild; u;)u.nodeType === Node.ELEMENT_NODE && (__gMsEdge.autofill.hasTagName(u, "td") || __gMsEdge.autofill.hasTagName(u, "th")) && (a = u.colSpan, y = c + a - 1, c === h && y === v && (l = u), c += a), u = u.nextSibling; if (s === c && l && (e = __gMsEdge.autofill.findChildText(l), e.length > 0)) return e } for (e = "", o = r.previousSibling; e.length === 0 && o;)__gMsEdge.autofill.hasTagName(o, "tr") && (e = __gMsEdge.autofill.findChildText(o)), o = o.previousSibling; return e }; __gMsEdge.autofill.isTraversableContainerElement = function (n) { if (n.nodeType !== Node.ELEMENT_NODE) return !1; var t = n.tagName; return t === "DD" || t === "DIV" || t === "FIELDSET" || t === "LI" || t === "TD" || t === "TABLE" }; __gMsEdge.autofill.inferLabelFromDivTable = function (n) { var o, e, f; if (!n) return ""; for (var t = n.parentNode, i = !0, u = [], r = ""; r.length === 0 && t;) { if (__gMsEdge.autofill.hasTagName(t, "div")) { if (r = i ? __gMsEdge.autofill.findChildTextWithIgnoreList(t, u) : __gMsEdge.autofill.findChildText(t), !i && r.length > 0 && (o = t.querySelector("input, select, textarea"), o)) { for (r = "", e = !0, f = 0; f < u.length; ++f)if (t === u[f]) { e = !1; break } e && u.push(t) } i = !1 } else if (!i && __gMsEdge.autofill.hasTagName(t, "label")) t.control || (r = __gMsEdge.autofill.findChildText(t)); else if (i && __gMsEdge.autofill.isTraversableContainerElement(t)) break; t.previousSibling || (i = !0); t = i ? t.parentNode : t.previousSibling } return r }; __gMsEdge.autofill.inferLabelFromDefinitionList = function (n) { var t, i; if (!n) return ""; for (t = n.parentNode; t && t.nodeType === Node.ELEMENT_NODE && !__gMsEdge.autofill.hasTagName(t, "dd");)t = t.parentNode; if (!t || !__gMsEdge.autofill.hasTagName(t, "dd")) return ""; for (i = t.previousSibling; i && i.nodeType === Node.TEXT_NODE;)i = i.previousSibling; return !i || !__gMsEdge.autofill.hasTagName(i, "dt") ? "" : __gMsEdge.autofill.findChildText(i) }; __gMsEdge.autofill.ancestorTagNames = function (n) { for (var i = [], t = n.parentNode; t;)t.nodeType === Node.ELEMENT_NODE && i.push(t.tagName), t = t.parentNode; return i }; __gMsEdge.autofill.inferLabelForElement = function (n) { var t, u, f, r, i; if (__gMsEdge.autofill.isCheckableElement(n) && (t = __gMsEdge.autofill.inferLabelFromNext(n), t.length > 0) || (t = __gMsEdge.autofill.inferLabelFromPrevious(n), t.length > 0) || (t = __gMsEdge.autofill.inferLabelFromPlaceholder(n), t.length > 0)) return t; for (u = __gMsEdge.autofill.ancestorTagNames(n), f = {}, r = 0; r < u.length; ++r)if (i = u[r], !(i in f)) { if (f[i] = !0, i === "DIV") t = __gMsEdge.autofill.inferLabelFromDivTable(n); else if (i === "TD") t = __gMsEdge.autofill.inferLabelFromTableColumn(n), t.length === 0 && (t = __gMsEdge.autofill.inferLabelFromTableRow(n)); else if (i === "DD") t = __gMsEdge.autofill.inferLabelFromDefinitionList(n); else if (i === "LI") t = __gMsEdge.autofill.inferLabelFromListItem(n); else if (i === "FIELDSET") break; if (t.length > 0) break } return t }; __gMsEdge.autofill.getOptionStringsFromElement = function (n, t) { var r, i, u; for (t.option_values = [], t.option_values.toJSON = null, t.option_contents = [], t.option_contents.toJSON = null, r = n.options, i = 0; i < r.length; ++i)u = r[i], t.option_values.push(u.value), t.option_contents.push(u.text) }; __gMsEdge.autofill.fillFormField = function (n, t) { var r, i; n.value && n.value.length !== 0 && (__gMsEdge.autofill.isTextInput(t) || __gMsEdge.autofill.isTextAreaElement(t) ? (r = n.value, __gMsEdge.autofill.isTextInput(t) && (i = n.max_length, i < 0 && (i = __gMsEdge.autofill.MAX_DATA_LENGTH), r = n.value.substr(0, i)), __gMsEdge.common.setInputElementValue(r, t, !0, "AutoFill_FillEvent")) : __gMsEdge.autofill.isSelectElement(t) ? t.value !== n.value && (t.value = n.value, __gMsEdge.common.createAndDispatchHTMLEvent(t, "change", !0, !1)) : __gMsEdge.autofill.isCheckableElement(t) && __gMsEdge.common.setInputElementChecked(n.is_checked, t, !0)) }; __gMsEdge.autofill.isTextInput = function (n) { return n ? __gMsEdge.common.isTextField(n) : !1 }; __gMsEdge.autofill.isSelectElement = function (n) { return n ? n.type === "select-one" : !1 }; __gMsEdge.autofill.isTextAreaElement = function (n) { return n ? n.type === "textarea" : !1 }; __gMsEdge.autofill.isCheckableElement = function (n) { return n ? n.type === "checkbox" || n.type === "radio" : !1 }; __gMsEdge.autofill.isAutofillableInputElement = function (n) { return __gMsEdge.autofill.isTextInput(n) }; __gMsEdge.autofill.nodeValue = function (n) { return (n.nodeValue || "").replace(/[\n\t]/gm, "") }; __gMsEdge.autofill.value = function (n) { return (n.value || "").replace(/[\n\t]/gm, "") }; __gMsEdge.autofill.extractAutofillableElementsFromSet = function (n) { for (var t, i = [], r = [], u = 0; u < n.length; ++u) { if (t = n[u], !__gMsEdge.autofill.isAutofillableElement(t)) { t.type === "password" && r.push(t); continue } i.push(t) } return r.length > 0 && (__gMsEdge.autofill.isSignupForm(r) || (i.length = 0)), i }; __gMsEdge.autofill.isSignupForm = function (n) { var u, t, f, e, i, r; if (n.length >= 2 || (u = n[0], t = u.getAttribute("autocomplete"), t && t.toLowerCase() === "new-password")) return !0; for (f = ["name", "id", "placeholder"], e = ["new", "create", "confirm", "check", "repeat", "reset", "regist"], i = 0; i < f.length; i++)if (t = u.getAttribute(f[i]), t) for (r = 0; r < e.length; r++)if (t.toLowerCase().indexOf(e[r]) > -1) return !0; return !1 }; __gMsEdge.autofill.extractAutofillableElementsInForm = function (n) { var t = __gMsEdge.common.getFormControlElements(n); return __gMsEdge.autofill.extractAutofillableElementsFromSet(t) }; __gMsEdge.autofill.webFormControlElementToFormField = function (n, t, i) { var e, l, o, u, r, s, f, h; if (i && n && !__gMsEdge.core.isElementHidden(n)) { i.name = __gMsEdge.common.nameForAutofill(n); n.id && (i.id = n.id); i.form_control_type = n.type; e = n.getAttribute("autocomplete"); e && (i.autocomplete_attribute = e); let c = n.placeholder; if (c && (i.placeholder = c), l = n.getAttribute("list"), l && (i.contains_list = !0), i.autocomplete_attribute != null && i.autocomplete_attribute.length > __gMsEdge.autofill.MAX_DATA_LENGTH && (i.autocomplete_attribute = "x-max-data-length-exceeded"), o = n.getAttribute("role"), o && o.toLowerCase() == "presentation" && (i.role = __gMsEdge.autofill.ROLE_ATTRIBUTE_PRESENTATION), __gMsEdge.autofill.isAutofillableElement(n)) { u = n.getBoundingClientRect(); let a = u.left + document.body.scrollLeft, v = u.top + document.body.scrollTop, y = u.right + document.body.scrollLeft, p = u.bottom + document.body.scrollTop; if (!(a < 0) && !(v < 0) && !(y < 0) && !(p < 0) && (i.left = (a - window.pageXOffset) * 100 / window.innerWidth, i.top = (v - window.pageYOffset) * 100 / window.innerHeight, i.right = (y - window.pageXOffset) * 100 / window.innerWidth, i.bottom = (p - window.pageYOffset) * 100 / window.innerHeight, (__gMsEdge.autofill.isAutofillableInputElement(n) || __gMsEdge.autofill.isTextAreaElement(n) || __gMsEdge.autofill.isSelectElement(n)) && (i.is_autofilled = n.classList.contains("edge-autofilled"), i.should_autocomplete = __gMsEdge.common.autoComplete(n), i.is_focusable = !n.disabled && !n.readOnly && n.tabIndex >= 0 && __gMsEdge.autofill.isVisibleNode(n)), __gMsEdge.autofill.isAutofillableInputElement(n) ? (__gMsEdge.autofill.isTextInput(n) && (i.max_length = n.maxLength), i.is_checkable = __gMsEdge.autofill.isCheckableElement(n)) : __gMsEdge.autofill.isTextAreaElement(n) || t & __gMsEdge.autofill.EXTRACT_MASK_OPTIONS && __gMsEdge.autofill.getOptionStringsFromElement(n, i), t & __gMsEdge.autofill.EXTRACT_MASK_VALUE)) { if (r = __gMsEdge.autofill.value(n), __gMsEdge.autofill.isSelectElement(n) && t & __gMsEdge.autofill.EXTRACT_MASK_OPTION_TEXT) for (s = n.options, f = 0; f < s.length; ++f)if (h = s[f], __gMsEdge.autofill.value(h) === r) { r = h.text; break } r.length > __gMsEdge.autofill.MAX_DATA_LENGTH && (r = r.substr(0, __gMsEdge.autofill.MAX_DATA_LENGTH)); i.value = r } } } }; __gMsEdge.autofill.fillPredictionData = function (n) { var r, t, i, e, u; for (r in n) { var o = __gMsEdge.common.getFormElementFromIdentifier(r), s = n[r], f = __gMsEdge.common.getFormControlElements(o); for (t = 0; t < f.length; ++t)(i = f[t], __gMsEdge.autofill.isAutofillableElement(i)) && (e = __gMsEdge.common.nameForAutofill(i), u = s[e], u && (i.placeholder = u)) } } }(), function () { "use strict"; browser.webruntime.onMessageFromHost.addListener(function (n) { var t = JSON.parse(n[0]); t.SelectedProfile && t.SelectedProfile != null ? __gMsEdge.autofill.fillForm(t.SelectedProfile, t.SelectedProfile.forceFillField, t.SelectedProfile.isCreditCard) : t.dropDownVisibility != null ? __gMsEdge.core.setDropDownVisibility(t.dropDownVisibility.isVisible) : t.propogateEnter != null ? __gMsEdge.core.setPropogateEnter(t.propogateEnter.isPropogationEnabled) : t.clearForm != null ? __gMsEdge.autofill.clearAutofilledFields(t.clearForm.formName) : t.addSubmitListenerData != null ? __gMsEdge.core.addSubmitListenerToPaymentForm(t.addSubmitListenerData) : t.SelectedGenericAutoSuggestionField && __gMsEdge.autofill.autoSuggestFieldFill(t.SelectedGenericAutoSuggestionField.formName, t.SelectedGenericAutoSuggestionField.forceFillField, t.SelectedGenericAutoSuggestionField.forceFillValue) }); var n = __gMsEdge.autofill.extractForms(__gMsEdge.numberOfRequiredFields), t = { formsData: n }; browser.webruntime.postMessageToHost([__gMsEdge.token, JSON.stringify(t)]) }()